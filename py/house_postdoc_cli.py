#!/usr/bin/env python3
# Copyright (c) rikiya@stanford.edu 2021
# Autogenerated by SWE for Science kickstart generator - www.sweforscience.com - www.twitter.com/sweforscience 

''' This is the main command line interface for house_postdoc. '''

import argparse
import logging
import sys
import time

import house_postdoc_lib

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='house_postdoc')
    parser.add_argument('-w', '--window', default=4, choices=[4, 8, 12], type=int, help='number of the windows')
    parser.add_argument('-g', '--garage', default=2, choices=[2, 3, 4], type=int, help='number of the garage doors')
    parser.add_argument('-d', '--door', default=1, choices=[1, 2], type=int, help='number of the doors')
    parser.add_argument('-t', '--tree', default=2, choices=[2, 3, 4], type=int, help='number of the trees')
    parser.add_argument('-c', '--cloud', default=1, choices=[1, 2, 3], type=int, help='number of the clouds')
    parser.add_argument('-v', '--verbose', default=False, action="store_true",
                        help="print details")
    args = parser.parse_args()
    logging.basicConfig(
        level=logging.INFO if not args.verbose else logging.DEBUG,
        format="%(asctime)s [%(levelname)s] %(message)s",
        handlers=[
            logging.FileHandler("debug.log"),
            logging.StreamHandler()
        ]
    )

    logging.info('starting up!')
    logging.info(f'n_window is {args.window}, n_garage is {args.garage}, n_door is {args.door}, n_tree is {args.tree}, n_cloud is {args.cloud}')

    # initialize My_turtle class object
    my_turtle = house_postdoc_lib.My_turtle()

    # set up window and screen to draw a house
    WIDTH, HEIGHT = 800, 600
    my_turtle.screen.setup(WIDTH + 8, HEIGHT + 8)

    # house
    my_turtle.set_position(40, -20)
    my_turtle.draw_rectangle(240, 200)
    my_turtle.set_position(0, -20)
    my_turtle.draw_triangle(320)
    my_turtle.set_position(-190, -60)
    my_turtle.draw_rectangle(230, 160)

    # windows
    my_turtle.set_position(56, -60)
    my_turtle.draw_window(40)
    my_turtle.set_position(112, -60)
    my_turtle.draw_window(40)
    my_turtle.set_position(168, -60)
    my_turtle.draw_window(40)
    my_turtle.set_position(220, -60)
    my_turtle.draw_window(40)
    
    # door
    my_turtle.set_position(140, -140)
    my_turtle.draw_door(40, 80)

    # garage
    my_turtle.set_position(-165, -85)
    my_turtle.draw_garage(180, 135)

    my_turtle.my_turtle.hideturtle()

    time.sleep(10)
    sys.exit(0)
