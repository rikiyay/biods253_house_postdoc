#!/usr/bin/env python3
# Copyright (c) rikiya@stanford.edu 2021
# Autogenerated by SWE for Science kickstart generator - www.sweforscience.com - www.twitter.com/sweforscience 

''' This is the main command line interface for house_postdoc. '''

import argparse
import logging
import sys
import time

import house_postdoc_lib

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='house_postdoc')
    parser.add_argument('-w', '--window', default=4, choices=[4, 8, 12], type=int, help='number of the windows')
    parser.add_argument('-g', '--garage', default=2, choices=[2, 3, 4], type=int, help='number of the garage doors')
    parser.add_argument('-d', '--door', default=1, choices=[1, 2], type=int, help='number of the doors')
    parser.add_argument('-t', '--tree', default=2, choices=[2, 3, 4], type=int, help='number of the trees')
    parser.add_argument('-c', '--cloud', default=1, choices=[1, 2, 3], type=int, help='number of the clouds')
    parser.add_argument('-v', '--verbose', default=False, action="store_true",
                        help="print details")
    args = parser.parse_args()
    logging.basicConfig(
        level=logging.INFO if not args.verbose else logging.DEBUG,
        format="%(asctime)s [%(levelname)s] %(message)s",
        handlers=[
            logging.FileHandler("debug.log"),
            logging.StreamHandler()
        ]
    )

    logging.info('starting up!')
    windows = args.window
    garages = args.garage
    doors = args.door
    trees = args.tree
    clouds = args.cloud
    logging.info(f'n_window is {windows}, n_garage is {garages}, n_door is {doors}, n_tree is {trees}, n_cloud is {clouds}')
    my_turtle = house_postdoc_lib.My_turtle()
    my_turtle.draw_rectangle(200, 200)
    my_turtle.set_position(-50, 0)
    my_turtle.draw_triangle(300)
    my_turtle.set_position(30, -30)
    my_turtle.draw_window(50)
    my_turtle.set_position(120, -30)
    my_turtle.draw_window(50)
    my_turtle.draw_door(70, -100, 60, 100)
    my_turtle.my_turtle.hideturtle()

    time.sleep(10)
    sys.exit(0)
